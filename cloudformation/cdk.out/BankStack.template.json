{
 "Resources": {
  "Transactions098C5767": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_IMAGE"
    },
    "TableName": "Transactions"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BankStack/Transactions/Resource"
   }
  },
  "BalancesB107DCF2": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "user",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "user",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "Balances"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BankStack/Balances/Resource"
   }
  },
  "TransactionServiceRole8F6509C4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/Transaction/ServiceRole/Resource"
   }
  },
  "TransactionServiceRoleDefaultPolicy123A37E4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Transactions098C5767",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TransactionServiceRoleDefaultPolicy123A37E4",
    "Roles": [
     {
      "Ref": "TransactionServiceRole8F6509C4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/Transaction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "Transaction2728EE3D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "TransactionServiceRole8F6509C4",
      "Arn"
     ]
    },
    "Handler": "transaction.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "TransactionServiceRoleDefaultPolicy123A37E4",
    "TransactionServiceRole8F6509C4"
   ],
   "Metadata": {
    "aws:cdk:path": "BankStack/Transaction/Resource",
    "aws:asset:path": "asset.7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TransactionsQueue38DCEC48": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BankStack/TransactionsQueue/Resource"
   }
  },
  "SendToSQSServiceRole7A59DC8E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/SendToSQS/ServiceRole/Resource"
   }
  },
  "SendToSQSServiceRoleDefaultPolicy04FECD62": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TransactionsQueue38DCEC48",
         "Arn"
        ]
       }
      },
      {
       "Action": "dynamodb:ListStreams",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Transactions098C5767",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendToSQSServiceRoleDefaultPolicy04FECD62",
    "Roles": [
     {
      "Ref": "SendToSQSServiceRole7A59DC8E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/SendToSQS/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendToSQS2BE6E3FD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SendToSQSServiceRole7A59DC8E",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "QUEUE_URL": {
       "Ref": "TransactionsQueue38DCEC48"
      }
     }
    },
    "Handler": "sendToSqs.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "SendToSQSServiceRoleDefaultPolicy04FECD62",
    "SendToSQSServiceRole7A59DC8E"
   ],
   "Metadata": {
    "aws:cdk:path": "BankStack/SendToSQS/Resource",
    "aws:asset:path": "asset.7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SendToSQSDynamoDBEventSourceBankStackTransactions77A9107AA32531E3": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "SendToSQS2BE6E3FD"
    },
    "BatchSize": 100,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "Transactions098C5767",
      "StreamArn"
     ]
    },
    "StartingPosition": "LATEST"
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/SendToSQS/DynamoDBEventSource:BankStackTransactions77A9107A/Resource"
   }
  },
  "CalculateBalanceServiceRole39FFCE85": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/CalculateBalance/ServiceRole/Resource"
   }
  },
  "CalculateBalanceServiceRoleDefaultPolicy0F3BAABF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BalancesB107DCF2",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TransactionsQueue38DCEC48",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CalculateBalanceServiceRoleDefaultPolicy0F3BAABF",
    "Roles": [
     {
      "Ref": "CalculateBalanceServiceRole39FFCE85"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/CalculateBalance/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CalculateBalanceE5765B7A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "CalculateBalanceServiceRole39FFCE85",
      "Arn"
     ]
    },
    "Handler": "setBalance.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "CalculateBalanceServiceRoleDefaultPolicy0F3BAABF",
    "CalculateBalanceServiceRole39FFCE85"
   ],
   "Metadata": {
    "aws:cdk:path": "BankStack/CalculateBalance/Resource",
    "aws:asset:path": "asset.7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CalculateBalanceSqsEventSourceBankStackTransactionsQueue4441970F1CE94060": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "CalculateBalanceE5765B7A"
    },
    "EventSourceArn": {
     "Fn::GetAtt": [
      "TransactionsQueue38DCEC48",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/CalculateBalance/SqsEventSource:BankStackTransactionsQueue4441970F/Resource"
   }
  },
  "GetBalancesServiceRoleC2781910": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/GetBalances/ServiceRole/Resource"
   }
  },
  "GetBalancesServiceRoleDefaultPolicy2A224A99": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BalancesB107DCF2",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetBalancesServiceRoleDefaultPolicy2A224A99",
    "Roles": [
     {
      "Ref": "GetBalancesServiceRoleC2781910"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/GetBalances/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetBalances83F63172": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetBalancesServiceRoleC2781910",
      "Arn"
     ]
    },
    "Handler": "getBalance.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "GetBalancesServiceRoleDefaultPolicy2A224A99",
    "GetBalancesServiceRoleC2781910"
   ],
   "Metadata": {
    "aws:cdk:path": "BankStack/GetBalances/Resource",
    "aws:asset:path": "asset.7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetBalanceUserServiceRoleFC86FB37": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/GetBalanceUser/ServiceRole/Resource"
   }
  },
  "GetBalanceUserServiceRoleDefaultPolicyC554E234": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BalancesB107DCF2",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetBalanceUserServiceRoleDefaultPolicyC554E234",
    "Roles": [
     {
      "Ref": "GetBalanceUserServiceRoleFC86FB37"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/GetBalanceUser/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetBalanceUser55FC4770": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetBalanceUserServiceRoleFC86FB37",
      "Arn"
     ]
    },
    "Handler": "getBalanceByUser.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "GetBalanceUserServiceRoleDefaultPolicyC554E234",
    "GetBalanceUserServiceRoleFC86FB37"
   ],
   "Metadata": {
    "aws:cdk:path": "BankStack/GetBalanceUser/Resource",
    "aws:asset:path": "asset.7ef36021cbf1beddfbcbe422e729fa315c400b266a4724fcb9e00a79a1e2efba",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BankApiA343C631": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "BankApi"
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Resource"
   }
  },
  "BankApiDeploymentD9126F8C96b8fd8534011fe439fd8c0f9ea89d75": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "BankApiA343C631"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "BankApibankbalancesuserGET2C9D6F75",
    "BankApibankbalancesuserE48339F8",
    "BankApibankbalancesGET963201C3",
    "BankApibankbalances4ADF3A8D",
    "BankApibank2CA89A9A",
    "BankApibanktransactionsPOST56488F03",
    "BankApibanktransactions1C286A57"
   ],
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Deployment/Resource"
   }
  },
  "BankApiDeploymentStageprod974D6120": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "BankApiA343C631"
    },
    "DeploymentId": {
     "Ref": "BankApiDeploymentD9126F8C96b8fd8534011fe439fd8c0f9ea89d75"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/DeploymentStage.prod/Resource"
   }
  },
  "BankApibank2CA89A9A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BankApiA343C631",
      "RootResourceId"
     ]
    },
    "PathPart": "bank",
    "RestApiId": {
     "Ref": "BankApiA343C631"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/Resource"
   }
  },
  "BankApibanktransactions1C286A57": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BankApibank2CA89A9A"
    },
    "PathPart": "transactions",
    "RestApiId": {
     "Ref": "BankApiA343C631"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/transactions/Resource"
   }
  },
  "BankApibanktransactionsPOSTApiPermissionBankStackBankApi1D466B82POSTbanktransactionsAD0C4FF1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Transaction2728EE3D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BankApiA343C631"
       },
       "/",
       {
        "Ref": "BankApiDeploymentStageprod974D6120"
       },
       "/POST/bank/transactions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/transactions/POST/ApiPermission.BankStackBankApi1D466B82.POST..bank.transactions"
   }
  },
  "BankApibanktransactionsPOSTApiPermissionTestBankStackBankApi1D466B82POSTbanktransactions353CFF31": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Transaction2728EE3D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BankApiA343C631"
       },
       "/test-invoke-stage/POST/bank/transactions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/transactions/POST/ApiPermission.Test.BankStackBankApi1D466B82.POST..bank.transactions"
   }
  },
  "BankApibanktransactionsPOST56488F03": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "BankApibanktransactions1C286A57"
    },
    "RestApiId": {
     "Ref": "BankApiA343C631"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Transaction2728EE3D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/transactions/POST/Resource"
   }
  },
  "BankApibankbalances4ADF3A8D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BankApibank2CA89A9A"
    },
    "PathPart": "balances",
    "RestApiId": {
     "Ref": "BankApiA343C631"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/Resource"
   }
  },
  "BankApibankbalancesuserE48339F8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BankApibankbalances4ADF3A8D"
    },
    "PathPart": "{user}",
    "RestApiId": {
     "Ref": "BankApiA343C631"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/{user}/Resource"
   }
  },
  "BankApibankbalancesuserGETApiPermissionBankStackBankApi1D466B82GETbankbalancesuser81B2D461": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetBalanceUser55FC4770",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BankApiA343C631"
       },
       "/",
       {
        "Ref": "BankApiDeploymentStageprod974D6120"
       },
       "/GET/bank/balances/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/{user}/GET/ApiPermission.BankStackBankApi1D466B82.GET..bank.balances.{user}"
   }
  },
  "BankApibankbalancesuserGETApiPermissionTestBankStackBankApi1D466B82GETbankbalancesuserEA192518": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetBalanceUser55FC4770",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BankApiA343C631"
       },
       "/test-invoke-stage/GET/bank/balances/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/{user}/GET/ApiPermission.Test.BankStackBankApi1D466B82.GET..bank.balances.{user}"
   }
  },
  "BankApibankbalancesuserGET2C9D6F75": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "BankApibankbalancesuserE48339F8"
    },
    "RestApiId": {
     "Ref": "BankApiA343C631"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetBalanceUser55FC4770",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/{user}/GET/Resource"
   }
  },
  "BankApibankbalancesGETApiPermissionBankStackBankApi1D466B82GETbankbalancesA1A3A405": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetBalances83F63172",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BankApiA343C631"
       },
       "/",
       {
        "Ref": "BankApiDeploymentStageprod974D6120"
       },
       "/GET/bank/balances"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/GET/ApiPermission.BankStackBankApi1D466B82.GET..bank.balances"
   }
  },
  "BankApibankbalancesGETApiPermissionTestBankStackBankApi1D466B82GETbankbalancesAACEE6F0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetBalances83F63172",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BankApiA343C631"
       },
       "/test-invoke-stage/GET/bank/balances"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/GET/ApiPermission.Test.BankStackBankApi1D466B82.GET..bank.balances"
   }
  },
  "BankApibankbalancesGET963201C3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "BankApibankbalances4ADF3A8D"
    },
    "RestApiId": {
     "Ref": "BankApiA343C631"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetBalances83F63172",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/BankApi/Default/bank/balances/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QTU/DMAyGf8vuaVhBIK7bgNvE2LhPbmJK1uaDOtlUVfnvpGn5kjj58WvnteNrfr/kywVcqBCyKVpV8eHgQTQsScdB9ga0lUl8hapFtnkzGSJrQVcS+PAUjPDKmrH0zY9nNP5gQydwC84pU4/l/9UddloRpWeRKdB82NtpUI472yrR575MkdHNEYjQE1+NIeV8HUSDfg2EjD6IDy8BQ7bIEBk4VYPHC/TJHcmvnMoDZnxA19pep+VG9VeWDlFnnwlSf14+D/pKZqOJt+jfrRyliWL86cvbjkbzv5+Dd8H/eZ54Y41UPh/DWIn8RFfn8o6Xt7xcnEipogvGK418P8VPJBg0RcABAAA="
   },
   "Metadata": {
    "aws:cdk:path": "BankStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "BankApiEndpointFB633DA5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "BankApiA343C631"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "BankApiDeploymentStageprod974D6120"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}